// app/services/ApiRequest.js
import OpenAI from "openai"; // Correctly import the OpenAI class
console.log("API Key:", process.env.NEXT_PUBLIC_OPENAI_API_KEY);

const openai = new OpenAI({
  apiKey: process.env.NEXT_PUBLIC_OPENAI_API_KEY,
  dangerouslyAllowBrowser: true,
});

/**
 * Method to call OpenAI API based on the prompt value
 * @param {*} promptValue The prompt value to be passed to the API
 * @returns Text generated by the API
 */
const openAIChatWrapper = async (promptValue) => {
  try {
    const completion = await openai.chat.completions.create({
      model: process.env.NEXT_PUBLIC_OPENAI_API_MODEL,
      messages: [
        { role: "system", content: "You are a helpful assistant." },
        { role: "user", content: promptValue },
      ],
    });

    return completion.choices[0].message.content.trim();
  } catch (error) {
    console.error("Error calling OpenAI API:", error);
    throw new Error("Failed to get a response from OpenAI");
  }
};

/**
 * Method to get answer suggestions from the OpenAI API based on a keyword
 * @param {*} keyword The keyword or topic the user wants suggestions for
 * @returns Suggested answers generated by the API
 */
export const getAnswerSuggestions = async (keyword) => {
  const promptValue = `Provide a detailed and well-explained answer to the following keyword: "${keyword}". Make sure the answer is short, informative and easy to understand.`;

  try {
    const suggestedAnswer = await openAIChatWrapper(promptValue);
    return suggestedAnswer;
  } catch (error) {
    console.error("Error getting answer suggestions:", error);
    return "Failed to get answer suggestions";
  }
};
